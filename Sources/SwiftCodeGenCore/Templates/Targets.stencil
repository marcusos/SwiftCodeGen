import Moya
import Foundation

{% for target in targets %}
{% include "TargetSummary.stencil" %}
struct {{ target.name }}: BaseTargetType {
    
    var path: String {
        return "{{ target.path }}"
    }
    let method: Moya.Method = .{{ target.method }}
    {% if target.hasParameters %}
    {% filter indent:4 %}{% include "TargetParametersHeader.stencil" %}{% endfilter %}
    {% filter indent:4 %}{% include "TargetParameters.stencil" %}{% endfilter %}
    {% else %}
    let task: Task = .requestPlain
    {% endif %}
}
{% endfor %}

extension Encodable {
    func asHeaders() -> [String: Any] {
        guard let data = try? JSONEncoder().encode(self),
            let json = (try? JSONSerialization.jsonObject(with: data, options: .allowFragments)) as? [String: Any] else {
            return [:]
        }
        return json
    }
}